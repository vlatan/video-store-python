services:

  redis:
    restart: always
    image: redis:6
    container_name: redis
    env_file: .env
    ports:
      - "${EXPOSE_REDIS_PORT:-}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "INCR", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 3
    volumes:
      - ./redis_data/:/data

  postgres:
    restart: always
    image: postgres:14.7
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
    ports:
      - "${EXPOSE_POSTGRES_PORT:-}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 3s
      timeout: 5s
      retries: 3
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  worker:
    restart: always
    build: .
    container_name: worker
    command: [ "python", "make_celery.py" ]
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  app:
    restart: always
    build: .
    container_name: app
    ports:
      - $PORT:$PORT
    env_file: .env
    environment:
      - CONFIG_TYPE=config.DevConfig
    command: [ "python", "run.py" ]
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
